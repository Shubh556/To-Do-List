[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "todos.models",
        "description": "todos.models",
        "isExtraImport": true,
        "detail": "todos.models",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "todos.models",
        "description": "todos.models",
        "isExtraImport": true,
        "detail": "todos.models",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todo_main.todos.migrations.0001_initial",
        "description": "todo_main.todos.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Task',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=100)),",
        "detail": "todo_main.todos.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todo_main.todos.migrations.0002_rename_title_task_task",
        "description": "todo_main.todos.migrations.0002_rename_title_task_task",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('todos', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='task',\n            old_name='title',\n            new_name='task',\n        ),",
        "detail": "todo_main.todos.migrations.0002_rename_title_task_task",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todo_main.todos.migrations.0003_alter_task_created_at_alter_task_updated_at",
        "description": "todo_main.todos.migrations.0003_alter_task_created_at_alter_task_updated_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('todos', '0002_rename_title_task_task'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='task',\n            name='created_at',\n            field=models.DateField(auto_now_add=True),\n        ),",
        "detail": "todo_main.todos.migrations.0003_alter_task_created_at_alter_task_updated_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todo_main.todos.migrations.0004_alter_task_created_at_alter_task_updated_at",
        "description": "todo_main.todos.migrations.0004_alter_task_created_at_alter_task_updated_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('todos', '0003_alter_task_created_at_alter_task_updated_at'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='task',\n            name='created_at',\n            field=models.DateTimeField(auto_now_add=True),\n        ),",
        "detail": "todo_main.todos.migrations.0004_alter_task_created_at_alter_task_updated_at",
        "documentation": {}
    },
    {
        "label": "TaskAdmin",
        "kind": 6,
        "importPath": "todo_main.todos.admin",
        "description": "todo_main.todos.admin",
        "peekOfCode": "class TaskAdmin(admin.ModelAdmin):\n    list_display = ('task', 'is_complete', 'created_at','updated_at')\n    search_fields = ('task',)\nadmin.site.register(Task,TaskAdmin)",
        "detail": "todo_main.todos.admin",
        "documentation": {}
    },
    {
        "label": "TodosConfig",
        "kind": 6,
        "importPath": "todo_main.todos.apps",
        "description": "todo_main.todos.apps",
        "peekOfCode": "class TodosConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'todos'",
        "detail": "todo_main.todos.apps",
        "documentation": {}
    },
    {
        "label": "Task",
        "kind": 6,
        "importPath": "todo_main.todos.models",
        "description": "todo_main.todos.models",
        "peekOfCode": "class Task(models.Model):\n    task = models.CharField(max_length=100)\n    is_complete = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.task",
        "detail": "todo_main.todos.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "todo_main.todos.urls",
        "description": "todo_main.todos.urls",
        "peekOfCode": "urlpatterns = [\n    # Add Task\n    path('addTask/',views.addTask,name='addTask'),\n    # Mark as Done\n    path('mark_as_done/<int:pk>/',views.mark_as_done,name='mark_as_done'),\n    # Mark as Not Done\n    path('mark_as_undone<int:pk>/',views.mark_as_undone,name='mark_as_undone'),\n    # Edit  Feature\n    path('edit_task/<int:pk>/',views.edit_task,name='edit_task'),\n    # Delete Task Feature",
        "detail": "todo_main.todos.urls",
        "documentation": {}
    },
    {
        "label": "addTask",
        "kind": 2,
        "importPath": "todo_main.todos.views",
        "description": "todo_main.todos.views",
        "peekOfCode": "def addTask(request):\n    task=request.POST['task']\n    Task.objects.create(task=task)\n    return redirect('home')\ndef mark_as_done(request,pk):\n    task=get_object_or_404(Task, pk=pk)\n    task.is_complete=True\n    task.save()\n    return redirect('home')\ndef mark_as_undone(request,pk):",
        "detail": "todo_main.todos.views",
        "documentation": {}
    },
    {
        "label": "mark_as_done",
        "kind": 2,
        "importPath": "todo_main.todos.views",
        "description": "todo_main.todos.views",
        "peekOfCode": "def mark_as_done(request,pk):\n    task=get_object_or_404(Task, pk=pk)\n    task.is_complete=True\n    task.save()\n    return redirect('home')\ndef mark_as_undone(request,pk):\n    task=get_object_or_404(Task, pk=pk)\n    task.is_complete=False\n    task.save()\n    return redirect('home')",
        "detail": "todo_main.todos.views",
        "documentation": {}
    },
    {
        "label": "mark_as_undone",
        "kind": 2,
        "importPath": "todo_main.todos.views",
        "description": "todo_main.todos.views",
        "peekOfCode": "def mark_as_undone(request,pk):\n    task=get_object_or_404(Task, pk=pk)\n    task.is_complete=False\n    task.save()\n    return redirect('home')\ndef edit_task(request,pk):\n    get_task=get_object_or_404(Task,pk=pk)\n    if request.method=='POST':\n        new_task=request.POST['task']\n        get_task.task=new_task",
        "detail": "todo_main.todos.views",
        "documentation": {}
    },
    {
        "label": "edit_task",
        "kind": 2,
        "importPath": "todo_main.todos.views",
        "description": "todo_main.todos.views",
        "peekOfCode": "def edit_task(request,pk):\n    get_task=get_object_or_404(Task,pk=pk)\n    if request.method=='POST':\n        new_task=request.POST['task']\n        get_task.task=new_task\n        get_task.save()\n        return redirect('home')\n    else:\n        context={\n            'get_task': get_task,",
        "detail": "todo_main.todos.views",
        "documentation": {}
    },
    {
        "label": "delete_task",
        "kind": 2,
        "importPath": "todo_main.todos.views",
        "description": "todo_main.todos.views",
        "peekOfCode": "def delete_task(request,pk):\n    get_task=get_object_or_404(Task,pk=pk)\n    get_task.delete()\n    return redirect('home')",
        "detail": "todo_main.todos.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "todo_main.todo_main.asgi",
        "description": "todo_main.todo_main.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "todo_main.todo_main.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-%ekf9z!3qhdl2!h1f4se_#_17hu6a#tz*im*u-*84l(-2x8q#a'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-%ekf9z!3qhdl2!h1f4se_#_17hu6a#tz*im*u-*84l(-2x8q#a'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'todos',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'todos',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'todos',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'todos',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\nMIDDLEWARE = [",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'todo_main.urls'",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "ROOT_URLCONF = 'todo_main.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "WSGI_APPLICATION = 'todo_main.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "todo_main.todo_main.settings",
        "description": "todo_main.todo_main.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todo_main.todo_main.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "todo_main.todo_main.urls",
        "description": "todo_main.todo_main.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', views.home, name='home'),\n    # To Do\n    path('todos/', include('todos.urls')),\n]",
        "detail": "todo_main.todo_main.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "todo_main.todo_main.views",
        "description": "todo_main.todo_main.views",
        "peekOfCode": "def home(request):\n    tasks = Task.objects.filter(is_complete=False).order_by('-updated_at')\n    completed_tasks = Task.objects.filter(is_complete=True).order_by('-updated_at')\n    return render(request, 'home.html', context={'tasks': tasks, 'completed_tasks': completed_tasks})",
        "detail": "todo_main.todo_main.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "todo_main.todo_main.wsgi",
        "description": "todo_main.todo_main.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "todo_main.todo_main.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "todo_main.manage",
        "description": "todo_main.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todo_main.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "todo_main.manage",
        "documentation": {}
    }
]